@using System.Security.Policy;
@model IEnumerable<EntityFrameworkWrittingApp.Models.GetAllPostsModel>

@{
    ViewData["Title"] = "Index";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">

<style>
    .image-container {
        position: relative;
        width: 122%;
        height: 420px; /* Set the desired height for the image */
        overflow: hidden;
    }

    .image-wrapper {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }

        .image-wrapper img {
            object-fit: cover;
            width: 122%;
            height: 100%;
        }

    .card-img-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 10px;
        font-size: 15px;
        color: black;
        text-align: center;
        width: 90%;
        margin: 0 auto;
    }
</style>

<br />
<br />
<br />
<br />

<div class="container">
    <div class="mx-auto" style="width: 70%;">
        @{
            var con = 1;
        }

        @foreach (var ite in Model)
        {
            int counts = 0;
            string[] ptcon = (ite.PostContaint).Split("\r\n\r\n");
            List<string> str = new List<string>();
            for (int i = 0; i < ptcon.Length; i++)
            {
                str.Add(ptcon[i]);

                counts++;
                if (counts == 14)
                {
                    break;
                }
            }
            var btnId = $"likeButton_{con}"; // Generate unique IDs for each button

            <div class="card">
                <div class="mails">
                    <span class="person border3">H</span>
                    <div class="mail-names">
                        @ite.UserName
                    </div>
                </div>
                <div class="mail-info">
                    <div class="card-image">
                        <div class="image-container">
                            <div class="image-wrapper">
                                <img class="card-img-top" src="@ite.ImageUrl" alt="Card image">
                                <div class="card-img-content">
                                    <p class="text-white">
                                        @foreach (var it in str)
                                        {
                                            @Html.Raw(it)
                                            <br />
                                        }
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="bottom-info">
                    <button id="@btnId" class="fa fa-heart" onclick="likefunction('@btnId')" style="font-size: 36px;"></button>

                    <i class="fa fa-comments-o" style="font-size:36px;"></i>
                    <i class="fa fa-save ms-3" style="font-size:36px; float:right"></i>
                </div>
            </div>

            con++;
        }
    </div>
</div>

<script>
    function likefunction(elemid) {
        var elem = document.getElementById(elemid);
        if (elem.style.color === 'red') {
            elem.style.color = 'black';
        } else {
            elem.style.color = 'red';
        }

        var postId = elemid.split("_")[1]; // Extract the postId from the element id

        $.ajax({
            url: '@Url.Action("LikePost")', // Replace "LikePost" with the actual name of your action method
            type: 'POST', // Or 'GET' depending on your scenario
            data: { id: postId }, // Pass any additional data required by the action method
            success: function (response) {
                // Handle the success response from the server here
                // You can update the UI or perform any other actions as needed
            },
            error: function (xhr, status, error) {
                // Handle the error response from the server here
                // Display an error message or perform any other error handling
            }
        });
    }
</script>
